/* m_Do_MemCard.cpp autogenerated by split.py v0.4 at 2021-01-31 21:14:24.930153 */

#include "global.h"
#include "m_Do/m_Do_Reset/m_Do_Reset.h"

// additional symbols needed for m_Do_MemCard.cpp
// autogenerated by split.py v0.4 at 2021-01-31 21:14:24.930190
extern "C" {
void CARDCheck(void);
void CARDClose(void);
void CARDCreate(void);
void CARDFormat(void);
void CARDFreeBlocks(void);
void CARDInit(void);
void CARDMount(void);
void CARDOpen(void);
void CARDProbe(void);
void CARDProbeEx(void);
void CARDUnmount(void);
void OSInitCond(void);
void OSSignalCond(void);
void OSWaitCond(void);
void __ct__9JKRThreadFP8OSThreadi(void);
void __dt__9JKRThreadFv(void);
void _restgpr_27(void);
void _restgpr_28(void);
void _savegpr_27(void);
void _savegpr_28(void);
void becomeCurrentHeap__7JKRHeapFv(void);
void func_80017470(void);
void mDoExt_getAssertHeap(void);
void mDoMemCdRWm_Restore(void);
void mDoMemCdRWm_Store(void);
void mDoMemCd_Ctrl_c(void);
void mDoMemCd_Ctrl_c_NS_FormatSync(void);
void mDoMemCd_Ctrl_c_NS_LoadSync(void);
void mDoMemCd_Ctrl_c_NS_SaveSync(void);
void mDoMemCd_Ctrl_c_NS_ThdInit(void);
void mDoMemCd_Ctrl_c_NS_attach(void);
void mDoMemCd_Ctrl_c_NS_checkspace(void);
void mDoMemCd_Ctrl_c_NS_command_attach(void);
void mDoMemCd_Ctrl_c_NS_command_format(void);
void mDoMemCd_Ctrl_c_NS_detach(void);
void mDoMemCd_Ctrl_c_NS_format(void);
void mDoMemCd_Ctrl_c_NS_getStatus(void);
void mDoMemCd_Ctrl_c_NS_load(void);
void mDoMemCd_Ctrl_c_NS_loadfile(void);
void mDoMemCd_Ctrl_c_NS_main(void);
void mDoMemCd_Ctrl_c_NS_mount(void);
void mDoMemCd_Ctrl_c_NS_restore(void);
void mDoMemCd_Ctrl_c_NS_save(void);
void mDoMemCd_Ctrl_c_NS_setCardState(void);
void mDoMemCd_Ctrl_c_NS_store(void);
void mDoMemCd_Ctrl_c_NS_update(void);
void mDoMemCd_main(void);
void memcpy(void);
}

// additional symbols needed for m_Do_MemCard.cpp
// autogenerated by split.py v0.4 at 2021-01-31 21:14:24.930195
extern u8 lbl_803743F8;
extern u8 lbl_803A34F8;
extern u8 lbl_803A3530;
extern u8 lbl_803DFC20;
extern u8 lbl_803E0C20;
extern u8 lbl_803E0F40;

extern "C" {
// __ct__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::mDoMemCd_Ctrl_c(void)
asm void mDoMemCd_Ctrl_c(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_8001672C.s"
}

// ThdInit__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::ThdInit(void)
asm void mDoMemCd_Ctrl_c_NS_ThdInit(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80016730.s"
}

// main__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::main(void)
asm void mDoMemCd_Ctrl_c_NS_main(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_800167D0.s"
}

// update__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::update(void)
asm void mDoMemCd_Ctrl_c_NS_update(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80016894.s"
}

// load__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::load(void)
asm void mDoMemCd_Ctrl_c_NS_load(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_800169B4.s"
}

// restore__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::restore(void)
asm void mDoMemCd_Ctrl_c_NS_restore(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80016A0C.s"
}

// LoadSync__15mDoMemCd_Ctrl_cFPvUlUl
// mDoMemCd_Ctrl_c::LoadSync(void*, u32, u32)
asm void mDoMemCd_Ctrl_c_NS_LoadSync(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80016AB0.s"
}

// save__15mDoMemCd_Ctrl_cFPvUlUl
// mDoMemCd_Ctrl_c::save(void*, u32, u32)
asm void mDoMemCd_Ctrl_c_NS_save(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80016B58.s"
}

// store__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::store(void)
asm void mDoMemCd_Ctrl_c_NS_store(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80016BD4.s"
}

// SaveSync__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::SaveSync(void)
asm void mDoMemCd_Ctrl_c_NS_SaveSync(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80016CE0.s"
}

// getStatus__15mDoMemCd_Ctrl_cFUl
// mDoMemCd_Ctrl_c::getStatus(u32)
asm void mDoMemCd_Ctrl_c_NS_getStatus(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80016D74.s"
}

// command_format__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::command_format(void)
asm void mDoMemCd_Ctrl_c_NS_command_format(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80016E58.s"
}

// format__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::format(void)
asm void mDoMemCd_Ctrl_c_NS_format(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80016EA8.s"
}

// FormatSync__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::FormatSync(void)
asm void mDoMemCd_Ctrl_c_NS_FormatSync(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80016F2C.s"
}

// attach__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::attach(void)
asm void mDoMemCd_Ctrl_c_NS_attach(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80016FB8.s"
}

// command_attach__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::command_attach(void)
asm void mDoMemCd_Ctrl_c_NS_command_attach(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_800170B8.s"
}

// detach__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::detach(void)
asm void mDoMemCd_Ctrl_c_NS_detach(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80017110.s"
}

// mount__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::mount(void)
asm void mDoMemCd_Ctrl_c_NS_mount(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80017148.s"
}

// loadfile__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::loadfile(void)
asm void mDoMemCd_Ctrl_c_NS_loadfile(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80017274.s"
}

// checkspace__15mDoMemCd_Ctrl_cFv
// mDoMemCd_Ctrl_c::checkspace(void)
asm void mDoMemCd_Ctrl_c_NS_checkspace(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_800172D4.s"
}

// setCardState__15mDoMemCd_Ctrl_cFl
// mDoMemCd_Ctrl_c::setCardState(s32)
asm void mDoMemCd_Ctrl_c_NS_setCardState(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80017360.s"
}

// mDoMemCd_main__FPv
// mDoMemCd_main(void*)
asm void mDoMemCd_main(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_8001741C.s"
}

// __sinit_m_Do_MemCard_cpp
//
asm void func_80017470(void) {
    nofralloc
#include "m_Do/m_Do_MemCard/asm/func_80017470.s"
}
};
