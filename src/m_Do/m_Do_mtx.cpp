/* m_Do_mtx.cpp autogenerated by split.py v0.4 at 2021-01-31 21:20:08.836503 */

#include "global.h"

// additional symbols needed for m_Do_mtx.cpp
// autogenerated by split.py v0.4 at 2021-01-31 21:20:08.836541
extern "C" {
void __dl__FPv(void);
void __mi__4cXyzCFRC3Vec(void);
void _restgpr_29(void);
void _savegpr_29(void);
void cM_atan2s__Fff(void);
void func_8000CCC8(void);
void func_8000CD14(void);
void func_8000CE00(void);
void func_8000CFB8(void);
void func_80361C24(void);
void mDoMtx_MtxToRot(void);
void mDoMtx_QuatConcat(void);
void mDoMtx_XYZrotM(void);
void mDoMtx_XYZrotS(void);
void mDoMtx_XrotM(void);
void mDoMtx_XrotS(void);
void mDoMtx_YrotM(void);
void mDoMtx_YrotS(void);
void mDoMtx_ZXYrotM(void);
void mDoMtx_ZXYrotS(void);
void mDoMtx_ZrotM(void);
void mDoMtx_ZrotS(void);
void mDoMtx_concatProjView(void);
void mDoMtx_inverseTranspose(void);
void mDoMtx_lookAt(void);
void mDoMtx_lookAt_X1_(void);
void mDoMtx_quatStack_c_NS_dtor(void);
void mDoMtx_stack_c_NS_XYZrotM(void);
void mDoMtx_stack_c_NS_XYZrotS(void);
void mDoMtx_stack_c_NS_ZXYrotM(void);
void mDoMtx_stack_c_NS_ZXYrotS(void);
void mDoMtx_stack_c_NS_dtor(void);
void mDoMtx_stack_c_NS_quatM(void);
void mDoMtx_stack_c_NS_scaleM(void);
void mDoMtx_stack_c_NS_scaleM_X1_(void);
void mDoMtx_stack_c_NS_transM(void);
void mDoMtx_stack_c_NS_transM_X1_(void);
void mDoMtx_stack_c_NS_transS(void);
void normalizeRS__4cXyzFv(void);
void normalize__4cXyzFv(void);
void outprod__4cXyzCFRC3Vec(void);
}

// additional symbols needed for m_Do_mtx.cpp
// autogenerated by split.py v0.4 at 2021-01-31 21:20:08.836547
extern u8 lbl_803DD4A0;
extern u8 lbl_804505A8;
extern u8 lbl_804505AC;
extern u8 lbl_80450AEC;
extern u8 lbl_80451B08;
extern u8 lbl_80451B0C;
extern u8 lbl_80451B10;

extern "C" {
// mDoMtx_XYZrotS__FPA4_fsss
// mDoMtx_XYZrotS(f32 [][4], s16, s16, s16)
asm void mDoMtx_XYZrotS(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000C0CC.s"
}

// mDoMtx_XYZrotM__FPA4_fsss
// mDoMtx_XYZrotM(f32 [][4], s16, s16, s16)
asm void mDoMtx_XYZrotM(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000C164.s"
}

// mDoMtx_ZXYrotS__FPA4_fsss
// mDoMtx_ZXYrotS(f32 [][4], s16, s16, s16)
asm void mDoMtx_ZXYrotS(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000C208.s"
}

// mDoMtx_ZXYrotM__FPA4_fsss
// mDoMtx_ZXYrotM(f32 [][4], s16, s16, s16)
asm void mDoMtx_ZXYrotM(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000C2A0.s"
}

// mDoMtx_XrotS__FPA4_fs
// mDoMtx_XrotS(f32 [][4], s16)
asm void mDoMtx_XrotS(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000C344.s"
}

// mDoMtx_XrotM__FPA4_fs
// mDoMtx_XrotM(f32 [][4], s16)
asm void mDoMtx_XrotM(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000C39C.s"
}

// mDoMtx_YrotS__FPA4_fs
// mDoMtx_YrotS(f32 [][4], s16)
asm void mDoMtx_YrotS(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000C3DC.s"
}

// mDoMtx_YrotM__FPA4_fs
// mDoMtx_YrotM(f32 [][4], s16)
asm void mDoMtx_YrotM(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000C434.s"
}

// mDoMtx_ZrotS__FPA4_fs
// mDoMtx_ZrotS(f32 [][4], s16)
asm void mDoMtx_ZrotS(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000C474.s"
}

// mDoMtx_ZrotM__FPA4_fs
// mDoMtx_ZrotM(f32 [][4], s16)
asm void mDoMtx_ZrotM(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000C4CC.s"
}

// mDoMtx_lookAt__FPA4_fPC3VecPC3Vecs
// mDoMtx_lookAt(f32 [][4], const Vec*, const Vec*, s16)
asm void mDoMtx_lookAt(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000C50C.s"
}

// mDoMtx_lookAt__FPA4_fPC3VecPC3VecPC3Vecs
// mDoMtx_lookAt(f32 [][4], const Vec*, const Vec*, const Vec*, s16)
asm void mDoMtx_lookAt_X1_(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000C710.s"
}

// mDoMtx_concatProjView__FPA4_CfPA4_CfPA4_f
// mDoMtx_concatProjView(const f32 [][4], const f32 [][4], f32 [][4])
asm void mDoMtx_concatProjView(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000C8D0.s"
}

// mDoMtx_inverseTranspose__FPA4_CfPA4_f
// mDoMtx_inverseTranspose(const f32 [][4], f32 [][4])
asm void mDoMtx_inverseTranspose(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000C9B0.s"
}

// mDoMtx_QuatConcat__FPC10QuaternionPC10QuaternionP10Quaternion
// mDoMtx_QuatConcat(const Quaternion*, const Quaternion*, Quaternion*)
asm void mDoMtx_QuatConcat(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CB5C.s"
}

// mDoMtx_MtxToRot__FPA4_CfP5csXyz
// mDoMtx_MtxToRot(const f32 [][4], csXyz*)
asm void mDoMtx_MtxToRot(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CC00.s"
}

// push__14mDoMtx_stack_cFv
// mDoMtx_stack_c::push(void)
asm void func_8000CCC8(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CCC8.s"
}

// pop__14mDoMtx_stack_cFv
// mDoMtx_stack_c::pop(void)
asm void func_8000CD14(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CD14.s"
}

// transS__14mDoMtx_stack_cFRC4cXyz
// mDoMtx_stack_c::transS(const cXyz&)
asm void mDoMtx_stack_c_NS_transS(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CD64.s"
}

// transM__14mDoMtx_stack_cFfff
// mDoMtx_stack_c::transM(f32, f32, f32)
asm void mDoMtx_stack_c_NS_transM(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CD9C.s"
}

// transM__14mDoMtx_stack_cFRC4cXyz
// mDoMtx_stack_c::transM(const cXyz&)
asm void mDoMtx_stack_c_NS_transM_X1_(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CDD4.s"
}

// scaleS__14mDoMtx_stack_cFRC4cXyz
// mDoMtx_stack_c::scaleS(const cXyz&)
asm void func_8000CE00(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CE00.s"
}

// scaleM__14mDoMtx_stack_cFfff
// mDoMtx_stack_c::scaleM(f32, f32, f32)
asm void mDoMtx_stack_c_NS_scaleM(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CE38.s"
}

// scaleM__14mDoMtx_stack_cFRC4cXyz
// mDoMtx_stack_c::scaleM(const cXyz&)
asm void mDoMtx_stack_c_NS_scaleM_X1_(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CE70.s"
}

// XYZrotS__14mDoMtx_stack_cFRC5csXyz
// mDoMtx_stack_c::XYZrotS(const csXyz&)
asm void mDoMtx_stack_c_NS_XYZrotS(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CE9C.s"
}

// XYZrotM__14mDoMtx_stack_cFRC5csXyz
// mDoMtx_stack_c::XYZrotM(const csXyz&)
asm void mDoMtx_stack_c_NS_XYZrotM(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CED4.s"
}

// ZXYrotS__14mDoMtx_stack_cFRC5csXyz
// mDoMtx_stack_c::ZXYrotS(const csXyz&)
asm void mDoMtx_stack_c_NS_ZXYrotS(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CF0C.s"
}

// ZXYrotM__14mDoMtx_stack_cFRC5csXyz
// mDoMtx_stack_c::ZXYrotM(const csXyz&)
asm void mDoMtx_stack_c_NS_ZXYrotM(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CF44.s"
}

// quatM__14mDoMtx_stack_cFPC10Quaternion
// mDoMtx_stack_c::quatM(const Quaternion*)
asm void mDoMtx_stack_c_NS_quatM(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CF7C.s"
}

// __sinit_m_Do_mtx_cpp
//
asm void func_8000CFB8(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000CFB8.s"
}

// __dt__18mDoMtx_quatStack_cFv
// mDoMtx_quatStack_c::~mDoMtx_quatStack_c(void)
asm void mDoMtx_quatStack_c_NS_dtor(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000D034.s"
}

// __dt__14mDoMtx_stack_cFv
// mDoMtx_stack_c::~mDoMtx_stack_c(void)
asm void mDoMtx_stack_c_NS_dtor(void) {
    nofralloc
#include "m_Do/m_Do_mtx/asm/func_8000D070.s"
}
};
